{
  "_from": "bootstrap-icons@^1.0.0",
  "_id": "bootstrap-icons@1.0.0",
  "_inBundle": false,
  "_integrity": "sha512-PaQm3VtSqbUnWuyqGmFJG5iF9UMieDuk8raPOmKOtKeyWyiVshgLoKa+9EWGolGU/nvyBLEBWhZoQqhu9ccNBg==",
  "_location": "/bootstrap-icons",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "bootstrap-icons",
    "fetchSpec": "^1.0.0",
    "name": "bootstrap-icons",
    "raw": "bootstrap-icons@^1.0.0",
    "rawSpec": "^1.0.0",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/bootstrap-icons/-/bootstrap-icons-1.0.0.tgz",
  "_shasum": "90ed08c9503cef95184972420fbea7b09780bd83",
  "_spec": "bootstrap-icons@^1.0.0",
  "_where": "/home/kanic/Desktop/smart-data-center",
  "author": {
    "name": "mdo"
  },
  "bugs": {
    "url": "https://github.com/twbs/icons/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Official open source SVG icon library for Bootstrap",
  "devDependencies": {
    "autoprefixer": "^9.8.6",
    "chalk": "^4.1.0",
    "cheerio": "^1.0.0-rc.3",
    "cross-env": "^7.0.2",
    "eslint": "^7.7.0",
    "find-unused-sass-variables": "^2.0.0",
    "hugo-bin": "^0.62.3",
    "js-yaml": "^3.14.0",
    "linkinator": "^2.1.2",
    "npm-run-all": "^4.1.5",
    "postcss-cli": "^7.1.1",
    "purgecss": "^2.3.0",
    "shx": "^0.3.2",
    "stylelint": "^13.6.1",
    "stylelint-config-twbs-bootstrap": "^2.0.3",
    "svg-sprite": "^1.5.0",
    "svgo": "^1.3.2",
    "vnu-jar": "20.6.30"
  },
  "engines": {
    "node": ">=10"
  },
  "files": [
    "bootstrap-icons.svg",
    "icons/*.svg"
  ],
  "homepage": "https://icons.getbootstrap.com/",
  "hugo-bin": {
    "buildTags": "extended"
  },
  "keywords": [
    "bootstrap",
    "icons"
  ],
  "license": "MIT",
  "name": "bootstrap-icons",
  "optionalDependencies": {},
  "readme": "<p align=\"center\">\n  <a href=\"https://v5.getbootstrap.com/\">\n    <img src=\"https://v5.getbootstrap.com/docs/5.0/assets/brand/bootstrap-logo-shadow.png\" alt=\"Bootstrap logo\" width=\"200\" height=\"165\">\n  </a>\n</p>\n\n<h3 align=\"center\">Bootstrap Icons</h3>\n\n<p align=\"center\">\n  Official open source SVG icon library for Bootstrap.\n  <br>\n  <a href=\"https://icons.getbootstrap.com/\"><strong>Explore Bootstrap Icons »</strong></a>\n  <br>\n  <br>\n  <a href=\"https://getbootstrap.com/docs/4.5/\">Bootstrap</a>\n  ·\n  <a href=\"https://themes.getbootstrap.com/\">Themes</a>\n  ·\n  <a href=\"https://blog.getbootstrap.com/\">Blog</a>\n</p>\n\n## 1,100+ icons\n\n[![Bootstrap Icons full set](https://user-images.githubusercontent.com/98681/91365119-402cdc00-e7b5-11ea-9a2c-e1a03aed21c3.png)](https://icons.getbootstrap.com)\n\n[Also available in Figma.](https://www.figma.com/file/9YmlUAwhMv99G4yP4yN7Jy/Bootstrap-Icons-v1.0.0?node-id=0%3A1)\n\n## Install\n\nBootstrap Icons are packaged up and published to npm. We only include the processed SVGs in this package—it's up to you and your team to implement. [Read our docs](https://icons.getbootstrap.com/) for usage instructions.\n\n```shell\nnpm i bootstrap-icons --save\n```\n\n## Usage\n\nDepending on your setup, you can include Bootstrap Icons in a handful of ways.\n\n- Copy-paste SVGs as embedded HTML\n- Reference via `<img>` element\n- Use the SVG sprite\n- Include via CSS\n\n[See the docs for more information.](https://icons.getbootstrap.com/#usage)\n\n## Development\n\n[![Build Status](https://github.com/twbs/icons/workflows/Tests/badge.svg)](https://github.com/twbs/icons/actions?workflow=Tests)\n\nClone the repo, install dependencies, and start the Hugo server locally.\n\n```shell\ngit clone https://github.com/twbs/icons/\ncd icons\nnpm i\nnpm start\n```\n\nThen open `http://localhost:4000` in your browser.\n\n### npm scripts\n\nHere are some key scripts you'll use during development. Be sure to look to our `package.json` for a complete list of scripts.\n\n| Script | Description |\n| --- | --- |\n| `start` | Alias for running `docs-serve` |\n| `docs-serve` | Starts a local Hugo server |\n| `pages` | Generates permalink pages for each icon with template Markdown |\n| `icons` | Processes and optimizes SVGs in `icons` directory |\n\n## Adding SVGs\n\nOnce a new SVG icon has been added to the `icons` directory, you'll need to optimize them. An npm script is used to:\n\n1. Optimize our SVGs with SVGO.\n2. Modify the SVGs source HTML, removing all attributes before setting new attributes and values in our preferred order.\n\nUse `npm run icons` to run the script, run `npm run pages` to build permalink pages, complete those pages, and, finally, commit the results in a new branch for updating.\n\n## Publishing\n\nDocumentation is published automatically when a new Git tag is published. See our GitHub Actions and `package.json` for more information.\n\n## License\n\nMIT\n\n## Author\n\n[@mdo](https://github.com/mdo)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/twbs/icons.git"
  },
  "scripts": {
    "docs-build": "hugo --cleanDestinationDir",
    "docs-purge": "npm run docs-build && npx purgecss --css docs/static/assets/css/bootstrap.min.css --content _site/**/*.html,_site/index.html --output docs/static/assets/css/",
    "docs-serve": "hugo server --port 4000 --disableFastRender",
    "icons": "node build/build-svgs.js",
    "icons-sprite": "svg-sprite --svg-namespace-classnames false --symbol --symbol-dest . --symbol-sprite bootstrap-icons.svg icons/*.svg",
    "icons-zip": "cross-env-shell \"shx rm -rf bootstrap-icons-$npm_package_version && shx cp -r icons/ bootstrap-icons-$npm_package_version && shx cp bootstrap-icons.svg bootstrap-icons-$npm_package_version && zip -r9 bootstrap-icons-$npm_package_version.zip bootstrap-icons-$npm_package_version && shx rm -rf bootstrap-icons-$npm_package_version\"",
    "netlify": "npm-run-all icons docs-build",
    "pages": "node build/build-pages.js",
    "publish": "npm-run-all icons icons-sprite docs-build icons-zip",
    "start": "npm run docs-serve",
    "test": "npm-run-all docs-build --parallel test:*",
    "test:eslint": "eslint --cache --cache-location node_modules/.cache/.eslintcache --report-unused-disable-directives .",
    "test:fusv": "fusv docs/assets/scss/",
    "test:linkinator": "linkinator _site --recurse --silent --skip \"^(?!http://localhost)\"",
    "test:stylelint": "stylelint docs/assets/scss/ --cache --cache-location node_modules/.cache/.stylelintcache",
    "test:vnu": "node build/vnu-jar.js"
  },
  "version": "1.0.0"
}
